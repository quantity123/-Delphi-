unit uIDepartment;

interface

type
  TDepartment = class
  private
    FDeptID: Integer;
    FDeptName: string;
  public
    property DeptID: Integer read FDeptID write FDeptID;
    property DeptName: string read FDeptName write FDeptName;
  end;

  IDepartment = interface
    procedure Insert(Department: TDepartment);
    function GetDepartment(ID: Integer): TDepartment;
  end;

  TSqlServerDepartment = class(TInterfacedObject, IDepartment)
  public
    procedure Insert(Department: TDepartment);
    function GetDepartment(ID: Integer): TDepartment;
  end;

  TAccessDepartment = class(TInterfacedObject, IDepartment)
  public
    procedure Insert(Department: TDepartment);
    function GetDepartment(ID: Integer): TDepartment;
  end;

implementation

{ TSqlServerDepartment }

function TSqlServerDepartment.GetDepartment(ID: Integer): TDepartment;
begin

end;

procedure TSqlServerDepartment.Insert(Department: TDepartment);
begin

end;

end.
